// Mocks generated by Mockito 5.4.4 from annotations
// in flower_ecommerce_app_team5/test/modules/best_seller/ui/view_model/best_seller_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flower_ecommerce_app_team5/core/apis/api_result/api_result.dart'
    as _i5;
import 'package:flower_ecommerce_app_team5/modules/best_seller/domain/entities/best_seller/best_seller_response_entity.dart'
    as _i6;
import 'package:flower_ecommerce_app_team5/modules/best_seller/domain/repositories_contracts/best_seller/best_seller_repository.dart'
    as _i2;
import 'package:flower_ecommerce_app_team5/modules/best_seller/domain/use_cases/best_seller/get_best_seller_products_use_case.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBestSellerRepository_0 extends _i1.SmartFake
    implements _i2.BestSellerRepository {
  _FakeBestSellerRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetBestSellerProductsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetBestSellerProductsUseCase extends _i1.Mock
    implements _i3.GetBestSellerProductsUseCase {
  MockGetBestSellerProductsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BestSellerRepository get bestSellerRepository => (super.noSuchMethod(
        Invocation.getter(#bestSellerRepository),
        returnValue: _FakeBestSellerRepository_0(
          this,
          Invocation.getter(#bestSellerRepository),
        ),
      ) as _i2.BestSellerRepository);

  @override
  set bestSellerRepository(_i2.BestSellerRepository? _bestSellerRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #bestSellerRepository,
          _bestSellerRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i5.ApiResult<_i6.BestSellerResponseEntity>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<_i5.ApiResult<_i6.BestSellerResponseEntity>>.value(
                _i7.dummyValue<_i5.ApiResult<_i6.BestSellerResponseEntity>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i5.ApiResult<_i6.BestSellerResponseEntity>>);
}
