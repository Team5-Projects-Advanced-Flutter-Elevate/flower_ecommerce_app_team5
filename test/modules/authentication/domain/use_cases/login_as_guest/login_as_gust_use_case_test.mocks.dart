// Mocks generated by Mockito 5.4.5 from annotations
// in flower_ecommerce_app_team5/test/modules/authentication/domain/use_cases/login_as_guest/login_as_gust_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flower_ecommerce_app_team5/modules/authentication/domain/repositories_contracts/login_as_guest/login_as_guest_repo.dart'
    as _i2;
import 'package:flower_ecommerce_app_team5/shared_layers/storage/result/storage_result.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LoginAsGuestRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginAsGuestRepo extends _i1.Mock implements _i2.LoginAsGuestRepo {
  MockLoginAsGuestRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.StorageResult<void>> isGuest() => (super.noSuchMethod(
        Invocation.method(
          #isGuest,
          [],
        ),
        returnValue: _i3.Future<_i4.StorageResult<void>>.value(
            _i5.dummyValue<_i4.StorageResult<void>>(
          this,
          Invocation.method(
            #isGuest,
            [],
          ),
        )),
      ) as _i3.Future<_i4.StorageResult<void>>);
}
